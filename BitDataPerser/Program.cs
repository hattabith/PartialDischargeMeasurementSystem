// Ваші байти даних
byte[] byteArray = {
0xE0, 0x0B, 0x00, 0x00, 0x5E, 0x00, 0x3D, 0x00, 0x3E, 0x00, 0x1F, 0x00, 0x1C, 0x00, 0x03, 0x00, 0xFD, 0xFF, 0xE2, 0xFF, 0xDE, 0xFF, 0xC5, 0xFF, 0xC2, 0xFF, 0xA3, 0xFF, 0xA2, 0xFF, 0x83, 0xFF, 0x81, 0xFF, 0x65, 0xFF, 0x64, 0xFF, 0x46, 0xFF, 0x46, 0xFF, 0x27, 0xFF, 0x29, 0xFF, 0x0A, 0xFF, 0x09, 0xFF, 0xEC, 0xFE, 0xEB, 0xFE, 0xD1, 0xFE, 0xCD, 0xFE, 0xB1, 0xFE, 0xAE, 0xFE, 0x94, 0xFE, 0x92, 0xFE, 0x75, 0xFE, 0x73, 0xFE, 0x59, 0xFE, 0x58, 0xFE, 0x3B, 0xFE, 0x3A, 0xFE, 0x20, 0xFE, 0x1F, 0xFE, 0x02, 0xFE, 0x02, 0xFE, 0xE6, 0xFD, 0xE6, 0xFD, 0xCB, 0xFD, 0xC7, 0xFD, 0xB1, 0xFD, 0xB0, 0xFD, 0x94, 0xFD, 0x95, 0xFD, 0x7D, 0xFD, 0x7A, 0xFD, 0x60, 0xFD, 0x5F, 0xFD, 0x48, 0xFD, 0x46, 0xFD, 0x2D, 0xFD, 0x2A, 0xFD, 0x15, 0xFD, 0x13, 0xFD, 0xFD, 0xFC, 0xFC, 0xFC, 0xE7, 0xFC, 0xE8, 0xFC, 0xCD, 0xFC, 0xCF, 0xFC, 0xB9, 0xFC, 0xB9, 0xFC, 0xA3, 0xFC, 0xA3, 0xFC, 0x8F, 0xFC, 0x90, 0xFC, 0x78, 0xFC, 0x78, 0xFC, 0x64, 0xFC, 0x65, 0xFC, 0x50, 0xFC, 0x4F, 0xFC, 0x3F, 0xFC, 0x3C, 0xFC, 0x2C, 0xFC, 0x2C, 0xFC, 0x17, 0xFC, 0x1C, 0xFC, 0x09, 0xFC, 0x09, 0xFC, 0xF9, 0xFB, 0xF9, 0xFB, 0xE9, 0xFB, 0xE9, 0xFB, 0xDA, 0xFB, 0xDA, 0xFB, 0xCD, 0xFB, 0xCB, 0xFB, 0xBF, 0xFB, 0xBC, 0xFB, 0xB1, 0xFB, 0xB1, 0xFB, 0xA6, 0xFB, 0xA5, 0xFB, 0x9D, 0xFB, 0x9B, 0xFB, 0x90, 0xFB, 0x92, 0xFB, 0x84, 0xFB, 0x87, 0xFB, 0x7E, 0xFB, 0x80, 0xFB, 0x74, 0xFB, 0x76, 0xFB, 0x6C, 0xFB, 0x72, 0xFB, 0x66, 0xFB, 0x6A, 0xFB, 0x61, 0xFB, 0x62, 0xFB, 0x59, 0xFB, 0x5D, 0xFB, 0x58, 0xFB, 0x59, 0xFB, 0x50, 0xFB, 0x56, 0xFB, 0x4D, 0xFB, 0x53, 0xFB, 0x4C, 0xFB, 0x51, 0xFB, 0x4B, 0xFB, 0x4F, 0xFB, 0x4A, 0xFB, 0x50, 0xFB, 0x4A, 0xFB, 0x4F, 0xFB, 0x4A, 0xFB, 0x53, 0xFB, 0x4B, 0xFB, 0x55, 0xFB, 0x4D, 0xFB, 0x58, 0xFB, 0x53, 0xFB, 0x5D, 0xFB, 0x51, 0xFB, 0x61, 0xFB, 0x56, 0xFB, 0x65, 0xFB, 0x5F, 0xFB, 0x6C, 0xFB, 0x62, 0xFB, 0x72, 0xFB, 0x6A, 0xFB, 0x79, 0xFB, 0x71, 0xFB, 0x84, 0xFB, 0x78, 0xFB, 0x8B, 0xFB, 0x82, 0xFB, 0x97, 0xFB, 0x8D, 0xFB, 0xA1, 0xFB, 0x95, 0xFB, 0xAD, 0xFB, 0xA1, 0xFB, 0xB6, 0xFB, 0xAB, 0xFB, 0xC6, 0xFB, 0xB8, 0xFB, 0xD4, 0xFB, 0xC4, 0xFB, 0xE0, 0xFB, 0xD3, 0xFB, 0xEF, 0xFB, 0xE2, 0xFB, 0x01, 0xFC, 0xF1, 0xFB, 0x0E, 0xFC, 0x01, 0xFC, 0x20, 0xFC, 0x10, 0xFC, 0x30, 0xFC, 0x21, 0xFC, 0x43, 0xFC, 0x33, 0xFC, 0x56, 0xFC, 0x43, 0xFC, 0x6D, 0xFC, 0x5B, 0xFC, 0x80, 0xFC, 0x6E, 0xFC, 0x93, 0xFC, 0x82, 0xFC, 0xA9, 0xFC, 0x96, 0xFC, 0xBD, 0xFC, 0xAD, 0xFC, 0xD7, 0xFC, 0xC4, 0xFC, 0xEC, 0xFC, 0xD9, 0xFC, 0x04, 0xFD, 0xF1, 0xFC, 0x1B, 0xFD, 0x09, 0xFD, 0x35, 0xFD, 0x20, 0xFD, 0x4F, 0xFD, 0x3A, 0xFD, 0x66, 0xFD, 0x52, 0xFD, 0x82, 0xFD, 0x6C, 0xFD, 0x9D, 0xFD, 0x85, 0xFD, 0xB5, 0xFD, 0xA0, 0xFD, 0xD1, 0xFD, 0xBC, 0xFD, 0xED, 0xFD, 0xD4, 0xFD, 0x0A, 0xFE, 0xF1, 0xFD, 0x26, 0xFE, 0x0D, 0xFE, 0x43, 0xFE, 0x2A, 0xFE, 0x5E, 0xFE, 0x46, 0xFE, 0x7B, 0xFE, 0x63, 0xFE, 0x9B, 0xFE, 0x80, 0xFE, 0xB8, 0xFE, 0x9D, 0xFE, 0xD6, 0xFE, 0xBC, 0xFE, 0xF3, 0xFE, 0xD9, 0xFE, 0x14, 0xFF, 0xF5, 0xFE, 0x32, 0xFF, 0x13, 0xFF, 0x4D, 0xFF, 0x34, 0xFF, 0x6D, 0xFF, 0x50, 0xFF, 0x8B, 0xFF, 0x72, 0xFF, 0xAA, 0xFF, 0x91, 0xFF, 0xC8, 0xFF, 0xAF, 0xFF, 0xE7, 0xFF, 0xCD, 0xFF, 0x07, 0x00, 0xED, 0xFF, 0x26, 0x00, 0x0B, 0x00, 0x42, 0x00, 0x2B, 0x00, 0x63, 0x00, 0x48, 0x00, 0x81, 0x00, 0x67, 0x00, 0x9F, 0x00, 0x87, 0x00, 0xC0, 0x00, 0xA6, 0x00, 0xDD, 0x00, 0xC3, 0x00, 0xFB, 0x00, 0xE3, 0x00, 0x19, 0x01, 0xFF, 0x00, 0x38, 0x01, 0x1C, 0x01, 0x54, 0x01, 0x3A, 0x01, 0x72, 0x01, 0x57, 0x01, 0x8D, 0x01, 0x76, 0x01, 0xAA, 0x01, 0x91, 0x01, 0xCB, 0x01, 0xB1, 0x01, 0xE6, 0x01, 0xCD, 0x01, 0x01, 0x02, 0xE7, 0x01, 0x1D, 0x02, 0x04, 0x02, 0x37, 0x02, 0x20, 0x02, 0x51, 0x02, 0x3A, 0x02, 0x6A, 0x02, 0x55, 0x02, 0x88, 0x02, 0x6E, 0x02, 0x9F, 0x02, 0x8B, 0x02, 0xB8, 0x02, 0xA1, 0x02, 0xD4, 0x02, 0xBB, 0x02, 0xEA, 0x02, 0xD7, 0x02, 0x04, 0x03, 0xEC, 0x02, 0x1D, 0x03, 0x08, 0x03, 0x30, 0x03, 0x1C, 0x03, 0x48, 0x03, 0x35, 0x03, 0x5D, 0x03, 0x48, 0x03, 0x72, 0x03, 0x5F, 0x03, 0x85, 0x03, 0x76, 0x03, 0x9B, 0x03, 0x88, 0x03, 0xAC, 0x03, 0x9A, 0x03, 0xBF, 0x03,

        };

// Кількість байтів на одне значення (у вашому випадку 2)
int bytesPerValue = 2;

// Мінімальне та максимальне значення 12-бітного числа
int min12BitValue = 0;
int max12BitValue = 0x0FFF; // 4095 у десятковому представленні

// Мінімальне та максимальне значення для дійсних чисел
float minValue = 0.0f; // Ваше мінімальне значення
float maxValue = 1.0f; // Ваше максимальне значення

// Перетворити масив байтів в масив float
float[] floatArray = ConvertBytesToFloatArray(byteArray, bytesPerValue, min12BitValue, max12BitValue, minValue, maxValue);

// Вивести масив float
foreach (float floatValue in floatArray)
{
    Console.WriteLine(floatValue);
}

Console.ReadLine();
    
    static float[] ConvertBytesToFloatArray(byte[] byteArray, int bytesPerValue, int min12BitValue, int max12BitValue, float minValue, float maxValue)
{
    if (byteArray.Length % bytesPerValue != 0)
    {
        throw new ArgumentException("Неправильна довжина масиву байтів.");
    }

    int valuesCount = byteArray.Length / bytesPerValue;
    float[] floatArray = new float[valuesCount];

    for (int i = 0; i < valuesCount; i++)
    {
        byte[] bytes = byteArray.Skip(i * bytesPerValue).Take(bytesPerValue).ToArray();
        short shortValue = BitConverter.ToInt16(bytes, 0);

        // Масштабування 16-бітного числа до діапазону дійсних чисел
        float scaledValue = ((float)(shortValue - min12BitValue) / (max12BitValue - min12BitValue)) * (maxValue - minValue) + minValue;

        floatArray[i] = scaledValue;
    }

    return floatArray;
}
